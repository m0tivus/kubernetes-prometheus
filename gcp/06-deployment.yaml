apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  namespace: monitoring-prometheus
  labels:
    app: prometheus-server
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: prometheus-server

  template:
    metadata:
      labels:
        app: prometheus-server

    spec:
      # initContainers:
      #   - name: prometheus-data-permission-setup
      #     image: busybox
      #     command: ["/bin/chmod", "-R", "777", "/prometheus"]
      #     volumeMounts:
      #       - name: prometheus-storage-volume
      #         mountPath: /prometheus

      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
              name: http
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/

          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 5
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 5
            failureThreshold: 3
            periodSeconds: 30

      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf

        - name: prometheus-storage-volume
          persistentVolumeClaim:
            claimName: prometheus-pvc
